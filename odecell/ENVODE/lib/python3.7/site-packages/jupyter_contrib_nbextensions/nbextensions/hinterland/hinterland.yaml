Type: Jupyter Notebook Extension
Main: hinterland.js
Name: Hinterland
Link: README.md
Description: |
  Enable code autocompletion menu for every keypress in a code cell, instead of
  only enabling it with tab
Compatibility: 4.x, 5.x
Parameters:
- name: hinterland.hint_delay
  description: |
    delay in milliseconds between keypress & hint request. This is used to help
    ensure that the character from the keypress is added to the CodeMirror
    editor *before* the hint request checks the character preceding the cursor
    against the regexes below.
  input_type: number
  min: 1
  step: 1
  default: 20
- name: hinterland.enable_at_start
  description: |
    Enable hinterland's continuous hinting when notebook is first opened, or
    if false, only when selected from the help-menu item.
  input_type: checkbox
  default: true
- name: hinterland.hint_inside_comments
  description: |
    Whether to request hints while typing code comments.
  input_type: checkbox
  default: false
- name: hinterland.exclude_regexp
  description: |
    exclude_regexp:
    A regular expression tested against the character before the cursor, which,
    if a match occurs, prevents autocompletion from being triggered.
    This is useful, for example, to prevent triggering autocomplete on a colon,
    which  is included by the default Completer.reinvoke pattern.
    If blank, no test is performed.
    Note that the regex will be created without any flags, making it case
    sensitive.
  input_type: text
  # note that the YAML single-quoted string allows us to use the \ character
  # without escaping it, similar to python's raw string syntax
  default: ':'
- name: hinterland.include_regexp
  description: |
    include_regexp:
    A regular expression tested against the character before the cursor, which
    must match in order for autocompletion to be triggered.
    If left blank, the value of the notebook's Completer.reinvoke_re parameter
    is used, which can be modified by kernels, but defaults to
    /[%0-9a-z._/\\:~-]/i.
    Note that although the Completer.reinvoke_re default is case insensitive by
    virtue of its /i flag, any regex specified by the user will be created
    without any flags, making it case sensitive.
  input_type: text
  # note that the YAML single-quoted string allows us to use the \ character
  # without escaping it, similar to python's raw string syntax
  default: ''
- name: hinterland.tooltip_regexp
  description: |
    tooltip_regexp:
    A regular expression tested against the character before the cursor, which
    if it matches, causes a tooltip to be triggered, instead of regular
    autocompletion.
    For python, this is useful for example for function calls, so the default
    regex matches opening parentheses.
    Note that the regex will be created without any flags, making it case
    sensitive.
  input_type: text
  # note that the YAML single-quoted string allows us to use the \ character
  # without escaping it, similar to python's raw string syntax
  default: '\('
